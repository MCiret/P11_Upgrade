name: PurBeurre app CI + CD

on:
  push:
    branches: master
  workflow_dispatch:



jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      pg_db:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: p10_db_ci_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PG_PWD }}
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DB_PASSWORD: ${{ secrets.DB_PG_PWD }}
      DB_NAME: p10_db_ci_test

    steps:
    - name: Checking out code from the repository
      uses: actions/checkout@v2

    - name: Setting up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f pur_beurre_app/requirements.txt ]; then pip install -r pur_beurre_app/requirements.txt; fi

    - name: Test with unittest + selenium
      run: |
        cd pur_beurre_app/
        python manage.py test

  docker_build_image:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checking out code from the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Cache Docker layers (nginx img)
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-nginx
          key: ${{ runner.os }}-single-buildx-nginximg-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx-nginximg-
      - name: Build production nginx image
        uses: docker/build-push-action@v2
        with:
          context: ./nginx/
          builder: ${{ steps.buildx.outputs.name }}
          file: nginx/Dockerfile
          push: false
          load: true
          tags: nginx_img
          cache-from: type=local,src=/tmp/.buildx-cache-nginx
          cache-to: type=local,dest=/tmp/.buildx-cache-nginx-new

      - name: Cache Docker layers (web img)
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-web
          key: ${{ runner.os }}-single-buildx-webimg-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx-webimg-
      - name: Build production web image
        uses: docker/build-push-action@v2
        with:
          context: ./pur_beurre_app/
          builder: ${{ steps.buildx.outputs.name }}
          file: pur_beurre_app/Dockerfile.prod
          target: mainimg
          push: false
          load: true
          tags: web_img
          cache-from: type=local,src=/tmp/.buildx-cache-web
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-web-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-web
          rm -rf /tmp/.buildx-cache-nginx
          mv /tmp/.buildx-cache-web-new /tmp/.buildx-cache-web
          mv /tmp/.buildx-cache-nginx-new /tmp/.buildx-cache-nginx

      - name: Save images
        run: docker save -o purbeurre_images.tar web_img nginx_img

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: sftp to upload files to remote (prod) server
        run: |
          sftp ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root <<< $'put purbeurre_images.tar'
          sftp ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root <<< $'put docker-compose.prod.yml'

      - name: SSH to remote (prod) server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i purbeurre_images.tar
            docker-compose -f docker-compose.prod.yml up -d
            docker image prune --force



